@model IEnumerable<CasablancaMVC.Models.Author>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var queryOptions = (CasablancaMVC.Models.QueryOptions)ViewBag.QueryOptions;
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@*table-striped是斑马线效果*@
<div style="display:none" data-bind="visible:authors.length>0">
    <table class="table table-bordered table-striped">
        <tr>
            <th>
                @*@Html.DisplayNameFor(model => model.FirstName)*@
                @*"<a href=\"/Authors?SortField =FirstName&SortOrder =ASC\">FirstName<span class=\"glyphicon glyphicon-sort\"></span></a>"*@
                @Html.BuildSortableLink("FirstName", "Index", "firstName", queryOptions)
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.LastName)*@
                @Html.BuildSortableLink("LastName", "Index", "lastName", queryOptions)
            </th>
            <th>
                Actions
            </th>
        </tr>
        <tbody data-bind="foreach:authors">
            <tr>
                <td data-bind="text:firstName"></td>
                <td data-bind="text:lastName"></td>
                <td>
                    <a data-bind="attr:{href:'@Url.Action("Details")/'+id}" class="btn btn-info">细节</a>
                    <a data-bind="attr:{href:'@Url.Action("Edit")/'+id}" class="btn btn-warning">修改</a>
                    <a data-bind="click:$parent.showDeleteModal,attr:{href:'@Url.Action("Delete")/'+id}" class="btn btn-danger">删除</a>
                </td>
            </tr>
        </tbody>
    </table>
</div>

@Html.BuildNextPreviousLinks(queryOptions,"Index")
<nav >
    <ul class="pager">
        <li class="previous"><a href="#"><span aria-hidden="true">&larr;</span> Older</a></li>
        <li class="next"><a href="#">Newer <span aria-hidden="true">&rarr;</span></a></li>
    </ul>
</nav>
@section scripts{
    @Scripts.Render("/Scripts/ViewModels/AuthorIndexViewModel.js")
    <script>
        //function ViewModel(authors) {
        //    var self = this;
        //    self.authors = authors;
        //};
        var viewModel = new AuthorIndexViewModel(@Html.HtmlConvertToJson(Model));


        @*var viewModel = new ViewModel(@Html.HtmlConvertToJson(Model));*@
       
        ko.applyBindings(viewModel);
    </script>
    }